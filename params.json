{"name":"Android-lazy-library","tagline":"LouisLam's Lazy Library for Android. The library includes a lot of useful functions/methods for the rapid development.","body":"LouisLam's Lazy Library for Android. \r\n===================\r\n\r\n\r\n### Why we need the library? ###\r\n\r\nEvery single time, while i just wanted to pop out a simple alert dialog and I forgot how to create. Then I kept googling the code. Once I found that the code is very long. So I wonder why we cannot have a simple way just like Javascript alert(). It is easy to remember and just one line of code!\r\n\r\nSo I decided to create the library to do that.\r\n\r\n\tL.alert(\"Hi.\");\r\n\r\nOf course, the library contains other lazy functions. Check examples below.\r\n\r\n\r\n### Descriptions ###\r\n\r\nThere are example usage for the methods.\r\n\r\n\"L\" means LouisLam or Lazy.\r\n\r\nAssumption: \r\nIn all examples, \"this\" means Activity/Context object.\r\n\r\n\r\n## Installation ##\r\n\r\n1. Download the jar file.\r\n2. Import the jar to your android project.\r\n3. Import the package in your Class/Activity.\r\n\r\n\t\timport net.louislam.android.L;\r\n\r\n4. Done.\r\n\r\n\r\n## Lazy Alert Dialog ##\r\n\r\nI love this so much. <3\r\n\r\nUsage: \r\n\r\n\tL.alert(this, \"I am Louis.\");\r\n\r\nAlert Dialog with callback:\r\n\r\n\tL.alert(this, \"Boss: Where is Louis!?\", new OnClickListener() {\r\n\t\t@Override\r\n\t\tpublic void onClick(DialogInterface dialog, int which) {\r\n\t\t\tL.alert(MainActivity.this, \"Louis: here :( \");\r\n\t\t}\r\n\t});\r\n\r\n## Lazy Input Dialog ##\r\n\r\nExample Usage:\r\n\r\n\tL.inputDialog(this, \"What is your name?\", new InputListener() {\r\n\t \r\n\t \tpublic void inputResult(String value) {\r\n\t \t\tString name = value;\r\n\t \t\tL.alert(MainActivity.this, \"My name is: \" + name);\r\n\t\t}\r\n\t \r\n\t });\r\n\r\nWith default value (add a parameter to the last)\r\n\r\n\tL.inputDialog(this, \"What is your name?\", new InputListener() {\r\n\t \r\n\t \tpublic void inputResult(String value) {\r\n\t \t\tString name = value;\r\n\t \t\tL.alert(MainActivity.this, \"My name is: \" + name);\r\n\t\t}\r\n\t \r\n\t }, \"Louis\");\r\n\r\n## Lazy Confirmation Dialog ##\r\n\r\nExample Usage:\r\n\r\n\tL.confirmDialog(this, \"Are you sure?\", new OnClickListener () {\r\n\t\t@Override\r\n\t\tpublic void onClick(DialogInterface dialog, int which) {\r\n\t\t\t// Do something here if clicked \"Yes\"\t\r\n\t\t}\t\t\r\n\t});\r\n\r\n\r\nFor those activity classes already implements OnClickListener\r\n\r\n\tpublic class LoginActivity extends Activity implements OnClickListener {\r\n\t\t....\r\n\t  \tpublic void quit() {\r\n\t\t\tL.confirmDialog(this, \"Are you sure?\");\r\n\t \t}\r\n\t\t....\r\n\t}\r\n\r\n\r\n## Lazy Loading Dialog ##\r\n\r\nExample Usage:\r\n\r\n\tProgressDialog loadingDialog = L.progressDialog(this, \"Loading...\");\r\n\r\nDismiss the dialog:\r\n\r\n\tloadingDialog.dismiss();\r\n\r\n\r\n## Lazy Log ##\r\n\r\nsimply methods for LogCat\r\n\r\nExample Usage:\r\n\r\n\tL.log(\"[Debug] the activity is loaded.\");\r\n\r\nDisable/Enable Log globally\r\n\r\n\tL.enableLog(false);\r\n\r\n\r\n## Lazy String Storage\r\n\r\nStore\r\n\r\n\tL.storeString(this, \"username\", \"louislam\");\r\n\r\n\r\nRetrieve / Get\r\n\r\n\tL.getString(this, \"username\");\r\n\t\r\n\r\n## Lazy Start Activity ##\r\n\t \r\nExample Usage: \r\n\r\n\tL.startActivity(this, \"LoginActivity\");\r\n\r\nor\r\n\r\n\tL.startActivity(this, LoginActivity.class);\r\n\r\nor (For result)\r\n\r\n1314 = Request Code\r\n\r\n\tL.startActivity(this, LoginActivity.class, 1314);\r\n\r\nor (starting an activity for result with bundle)\r\n\r\n\tBundle bundle = new Bundle();\r\n\tL.startActivity(this, LoginActivity.class, 1314, bundle);\r\n\r\n\r\n## Others ##\r\n\r\nGet your app's version\r\n\r\n\tL.getAppVersion(this);","google":"UA-36889556-1","note":"Don't delete this file! It's used internally to help with page regeneration."}